<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 定义受环境影响易变的变量 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath*:/application-test.properties</value>
			</list>
		</property>
	</bean>

<!--
	<util:properties id="webserviceSettings" location="classpath:/webservice.properties" />
	-->
	  
	<util:properties id="application" location="classpath:/application-test.properties" />
		
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com.gnomon.pdms" />

	<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
	<bean id="dataSource" class="oracle.jdbc.pool.OracleConnectionPoolDataSource">
	    <property name="URL" value="${jdbc.url}" />
	    <property name="user" value="${jdbc.username}" />
	    <property name="password" value="${jdbc.password}" />
	</bean>
	

	<!-- 数据源配置,使用应用服务器的数据库连接池 
	<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/pdmsDB" />-->

	<!-- Hibernate配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache/ehcache-hibernate-local.xml</prop>
			</props>
		</property>
		
		<!-- 匹配目录,不是文件 -->
		<property name="packagesToScan">
			<list>
				<value>com.gnomon.afc.*</value>					   
			</list>
		</property>
		
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource"><ref bean="dataSource"/></property>
	</bean>	

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
<!--
	    <bean id="dailyJob" class="com.gnomon.sgmw.ims.job.DailyJob"></bean>
     <bean id="dailyJobTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> 
         
         <property name="targetObject"> 
             <ref bean="quartzJob"/> 
         </property> 
         
         <property name="targetMethod"> 
             <value>start</value> 
         </property> 
     </bean> 
           
      <bean id="dailyJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"> 
          <property name="jobDetail"> 
              <ref bean="dailyJobTask"/> 
          </property> 
           
          <property name="cronExpression"> 
              <value>0 0 22 * * ?</value> 
          </property> 
      </bean>
      --> 
</beans>