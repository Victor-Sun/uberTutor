/**
 * 质量问题管理-我的待办-再发防止Controller
 */
Ext.define('ExtApp.view.qualityissuemanagement.qedashboard.step.MyTaskInfo18Controller', {
    extend: 'ExtApp.view.common.IssueStepViewController',
    alias: 'controller.myTaskInfo18',
    //点击【提交】
    saveInfo: function(btn) {
    	var me = this;
    	var v_form = me.view.getForm();
    	if(v_form.isValid() == false){
    		Ext.Msg.alert('提示', "请填写必填项！！！");
    		return;
    	}
    	
    	v_form.submit({
    		url: '/pdms/ims/ims-issue!save.action',
            params: {
            	model: Ext.encode(v_form.getFieldValues()),
//            	keyId: me.view.keyId,
//            	formKey: me.view.formKey,
//            	taskId: me.view.taskId,
//            	ProcessInstanceId: me.view.ProcessInstanceId,
            	method:'updateIssue',
            	action:'NEXT'
            },
    	    waitMsg : '正在提交数据',
    	    waitTitle : '提示',
    	    method : "POST",
    	    success : function(form, action) {
    	    	var gridTask = me.getView().grid.getStore().load();
    	    	me.getView().close();
    	    },
    	    failure : function(form, action) {
    	    	ExtApp.util.Util.handleFormFailure(action);
    	    }
	    });
    },
    // 点击【通过】
    Adopt: function(btn) {
    	var me = this;
    	var v_form = me.view.getForm();
    	
    	var gridNotify = this.view.down('qeNotify').down('grid');
    	var data = [];
    	var records = gridNotify.store.getModifiedRecords();
    	v_form.submit({
    		url: '/pdms/ims/my-task-info12!completeMyTask.action',
			params: {
				keyId: me.keyId,
				ProcessInstanceId: me.ProcessInstanceId,
				taskId: me.taskId,
				formKey: me.formKey
			},
    	    waitMsg : '正在提交数据',  
    	    waitTitle : '提示',  
    	    method : "POST",
    	    success : function(form, action) {  
    	        Ext.Msg.alert('提示', "操作失败：输入非法字符！！！");
    	    },  
    	    failure : function(form, action) {
    	    	Ext.Msg.alert("success");
    	    	if (records.length > 0) {
		    		for (var i = 0; i < records.length; i++) {
	    	    		data.push(records[i].data);
	    	    	}
	    	    	Ext.Ajax.request({
	    	    		url:'/pdms/ims/qe-notify!saveNotifyList.action',
	    	    		params: {
	    	    			editModel: Ext.encode(data),
	    	    			keyId: me.keyId
	    				},
	    				scope: gridNotify,
	    				failure: function(response, opts) {
	    			    	ExtApp.util.Util.handleRequestFailure(response);
	    			    }
	    	    	});
    	    	}
    	    	var gridTask = me.up('mytask').down('grid');
    	    	gridTask.getStore().load();
    	    	me.getView().close();
    	    }
    	});
    },
    // 点击【回退】
    fallback : function(btn) {
    	var me = this;
    	var v_form = me.view.getForm();
    	var returnReasonWindow = Ext.create('ExtApp.view.common.ReturnReasonWindow',{
			callback:function(returnComment){
        		if(returnComment == null || returnComment == ''){
        			Ext.Msg.alert('提示', '必须添加备注！');
        			return;
        		}
        		returnReasonWindow.close();
				me.getView().mask('正在提交... 请耐心等待...');
				v_form.submit({
		    		url: '/pdms/ims/ims-issue!save.action',
		            params: {
		            	returnComment:returnComment,
		            	method:'updateIssue',
		            	action:'RETURN'
		            },
		    	    waitMsg : '正在提交数据',
		    	    waitTitle : '提示',
		    	    method : "POST",
		    	    success : function(form, action) {
		    	    	var gridTask = me.getView().grid.getStore().load();
		    	    	me.getView().close();
		    	    },
		    	    failure : function(form, action) {
		    	    	ExtApp.util.Util.handleFormFailure(action);
		    	    }
			    });
			}
		});
    	returnReasonWindow.show();
		return;
    },
	// 点击【是否更新DFMEA】
    selIsUpdatedDfmea: function(combo, newValue, oldValue, eOpts) {
    	var me = this;
    	var v_form = me.view.getForm();
    	var isUpdatedDfmeafield = v_form.findField('isUpdatedDfmea');
    	var dfmeaNofield = v_form.findField('dfmeaNo');
    	if(newValue == "Y"||newValue == "是"){
    		isUpdatedDfmeafield.setValue("Y");
    		dfmeaNofield.setHidden(false);
    		dfmeaNofield.allowBlank = false;
    	}else{
    		isUpdatedDfmeafield.setValue("N");
    		dfmeaNofield.setHidden(true);
    		dfmeaNofield.allowBlank = true;
    		dfmeaNofield.setValue("");
    	};
    },
	// 点击【是否更新技术条件】
    selIsUpdatedTc: function(combo, newValue, oldValue, eOpts) {
    	var me = this;
    	var v_form = me.view.getForm();
    	var isUpdatedTcfield = v_form.findField('isUpdatedTc');
    	var technicalStandardNofield = v_form.findField('technicalStandardNo');
    	if(newValue == "Y"||newValue == "是"){
    		isUpdatedTcfield.setValue("Y");
    		technicalStandardNofield.setHidden(false);
    		technicalStandardNofield.allowBlank = false;
    	}else{
    		isUpdatedTcfield.setValue("N");
    		technicalStandardNofield.setHidden(true);
    		technicalStandardNofield.allowBlank = true;
    		technicalStandardNofield.setValue("");
    	};
    }
});