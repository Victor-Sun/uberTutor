/**
 * 专项管理-零件列表
 */
Ext.define('ExtApp.view.projectManagement.dept.DeptGantt',{
	extend:'Ext.container.Container',
	mixins          : ['Gnt.mixin.Localizable'],
	xtype:'deptGantt',
//	margin:10,
	cls:'shadow',
	layout:'fit',
	initComponent: function() {
		var me = this;
		var plannedStartDate = me.record.get('plannedStartDate');
		var plannedFinishDate = me.record.get('plannedFinishDate');
		me.crudManager = new ExtApp.view.projectManagement.gantt.crud.CrudManager({
            taskStore : new ExtApp.view.projectManagement.gantt.store.Tasks({
                calendarManager : new ExtApp.view.projectManagement.gantt.store.Calendars()
            }),
            transport :{
    	        load : {
    	            method      : 'GET',
    	            paramName   : 'q',
    	            params          : {
    	                obsId         : me.nodeId,
    	                programVehicleId:me.record.get('vehicleId')
    	            },
    	            url         : '/pdms/pm/project-task-list!getGantt.action'
//    	            url         : 'data/load.json'
    	        }
    	    }
        });
//		me.crudManager.load();

        // Creating undo/redo manager
        me.undoManager = new Gnt.data.undoredo.Manager({
            transactionBoundary : 'timeout',
            stores              : [
                me.crudManager.getCalendarManager(),
                me.crudManager.getTaskStore(),
                me.crudManager.getResourceStore(),
                me.crudManager.getAssignmentStore(),
                me.crudManager.getDependencyStore()
            ]
        });
        me.currentLocale    = 'en';
        var locales = Ext.create('ExtApp.view.projectManagement.gantt.store.Locales');
        var gantt = Ext.create('ExtApp.view.projectManagement.gantt.view.MainViewport',{
        	viewModel       : {
                type        : 'advanced-viewport',
                data        : {
                    crud                : me.crudManager,
                    undoManager         : me.undoManager,
                    taskStore           : me.crudManager.getTaskStore(),
                    calendarManager     : me.crudManager.getCalendarManager(),
                    currentLocale       : me.currentLocale,
                    availableLocales    : locales
                }
            },
        	crudManager     : me.crudManager,
            undoManager     : me.undoManager,
            header     : {xtype: 'deptGanttHeader'},
            readOnly:true,
            startDate           : new Date(plannedStartDate),
            endDate             : new Date(plannedFinishDate)
        });
		this.items = [gantt];
		this.callParent(arguments);
	}
});