/**
 * 项目计划导入
 */
Ext.define('ExtApp.view.projectmanagement.extplan.ext301.NodeListController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.nodeList',
    edit:function(editor, e){
    	var me = this;
    	Ext.getBody().mask();
    	Ext.Ajax.request({
	   	 	 url: '/pdms/pm/ext301!saveNodeInfo.action',
	   	 	 params: {
	   	 		taskId:e.record.data.taskId,
	   	 		plannedFinishDate:e.record.data.plannedFinishDate,
	   	 		actualFinishDate:e.record.data.actualFinishDate
	   	 	 },
	   	 	 scope: me,
	   	 	 success: function(response, opts) {
	   	     	Ext.getBody().unmask();
	   	    	var obj = Ext.decode(response.responseText);
	   	        if (obj.success) {
	   	        	e.record.commit();
	   	        } else {
	   	        	ExtApp.util.Util.handleRequestFailure(response);
	   	        }
	   	    },
		    failure: function(response, opts) {
		        Ext.getBody().unmask();
		        ExtApp.util.Util.handleRequestFailure(response);
		    }
       });
    },
    initSchedule:function(){
    	var me = this;
    	Ext.getBody().mask();
    	Ext.Ajax.request({
	   	 	 url: '/pdms/pm/ext301!initSchedule.action',
	   	 	 params: {
	   	 		programVehicleId:me.view.record.get('vehicleId')
	   	 	 },
	   	 	 scope: me,
	   	 	 success: function(response, opts) {
	   	     	Ext.getBody().unmask();
	   	    	var obj = Ext.decode(response.responseText);
	   	        if (obj.success) {
	   	        
	   	        } else {
	   	        	ExtApp.util.Util.handleRequestFailure(response);
	   	        }
	   	    },
		    failure: function(response, opts) {
		        Ext.getBody().unmask();
		        ExtApp.util.Util.handleRequestFailure(response);
		    }
       });
    }
});
