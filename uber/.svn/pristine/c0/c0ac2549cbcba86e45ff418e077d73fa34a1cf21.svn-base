Ext.define('ExtApp.view.projectmanagement.extplan.ext301.PartExcutePanelControll',{
	extend: 'Ext.app.ViewController',
	alias: 'controller.partExcutePanelControll',
	edit:function(editor, e){
    	var me = this;
    	Ext.getBody().mask();
    	Ext.Ajax.request({
	   	 	 url: '/pdms/pm/ext301!saveNodeInfo.action',
	   	 	 params: {
	   	 		taskId:e.record.data.taskId,
	   	 		plannedFinishDate:e.record.data.plannedFinishDate,
	   	 		actualFinishDate:e.record.data.actualFinishDate
	   	 	 },
	   	 	 scope: me,
	   	 	 success: function(response, opts) {
	   	     	Ext.getBody().unmask();
	   	    	var obj = Ext.decode(response.responseText);
	   	        if (obj.success) {
	   	        	e.record.commit();
	   	        } else {
	   	        	ExtApp.util.Util.handleRequestFailure(response);
	   	        }
	   	    },
		    failure: function(response, opts) {
		        Ext.getBody().unmask();
		        ExtApp.util.Util.handleRequestFailure(response);
		    }
       });
    },
    finish:function(button){
    	var me = this;
    	var selections = me.view.getActiveTab().getSelection();
    	var modelData = [];
    	for(var i=0;i<selections.length;i++){
    		modelData.push(selections[i].data.taskId);
    	}
    	
    	var returnReasonWindow = Ext.create('ExtApp.view.common.ReturnReasonWindow',{
			callback:function(returnComment){
        		if(returnComment == null || returnComment == ''){
        			Ext.Msg.alert('提示', '必须添加备注！');
        			return;
        		}
        		returnReasonWindow.close();
        		Ext.getBody().mask();
				Ext.Ajax.request({
		    		programVehicleId:me.view.programVehicleId,
			   	 	 url: '/pdms/pm/ext301!updateTaskComplete.action',
			   	 	 params: {
		    			 model: Ext.encode(modelData),
		    			 action:button.value,
		    			 remark:returnComment
					 },
			   	 	 scope: me,
			   	 	 success: function(response, opts) {
			   	     	Ext.getBody().unmask();
			   	    	var obj = Ext.decode(response.responseText);
			   	        if (obj.success) {
			   	        	ExtApp.util.Util.showToast("提交成功！");
			   	        	me.view.getPartExcuteHeader(me.view.programVehicleId);
			   	        } else {
			   	        	ExtApp.util.Util.handleRequestFailure(response);
			   	        }
			   	    },
				    failure: function(response, opts) {
				        Ext.getBody().unmask();
				        ExtApp.util.Util.handleRequestFailure(response);
				    }
		       });
			}
		});
    	returnReasonWindow.show();
    	
    },
    batchCompleteScheduleDate:function(){
    	var me = this;
    	var batchCompleteScheduleWindow = Ext.create('ExtApp.view.projectmanagement.extplan.ext301.BatchCompleteScheduleWindow',{programVehicleId:me.view.programVehicleId,grid:me.view.getActiveTab()});
    	batchCompleteScheduleWindow.show();
    },
    batchCompleteSchedule:function(){
    	var me = this;
    	var selections = me.view.grid.getSelection();
    	var modelData = [];
    	for(var i=0;i<selections.length;i++){
    		modelData.push(selections[i].data.taskId);
    	}
    	form = me.view.down('form').getForm();
		me.getView().mask('Saving... Please wait...');
		form.submit({
			clientValidation: true,
			params: {
				model: Ext.encode(modelData)
			},
		    url: '/pdms/pm/ext301!batchCompleteSchedule.action',
		    scope: me,
		    success: 'onSubmitSuccess',
		    failure: 'onSubmitFailure'
		});
    },
    onSubmitFailure: function(form, action) {
        this.getView().unmask();
        ExtApp.util.Util.handleFormFailure(action);
    },
    onSubmitSuccess: function(form, action) {
    	var me = this;
    	var view = me.getView();
        view.unmask();    
        view.grid.up('partExcutePanel').getPartExcuteHeader(me.view.programVehicleId);
        view.close();
    }
});