/**
 * 质量问题管理-我的草稿-详细信息Controller
 */
Ext.define('ExtApp.view.qualityissuemanagement.qesubmission.MySubInfoController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.mySubInfo',
	// 点击【添加附件】
	addFile: function() {
    	var newWin = Ext.create({
			title:"上传",
        	xtype: 'desAttachmentWindow'
        });
		newWin.show();
    },
    // 点击【提交】
    saveSubmit: function(btn) {

    	var ma = this.view;
    	var v_form = this.view.getForm();
    	var me = this.getView().getForm().findField('QestionOut');
    	var gridNotify = this.getView().up('qmsmain').down('qeNotify').down('grid');
    	var data = [];
    	var records = gridNotify.store.getModifiedRecords();
    	this.setAllowBlank('0');
    	v_form.submit({
    		url: '/pdms/ims/my-sub-info!saveSubmit.action',
			params: {
				model: Ext.encode(v_form.getFieldValues()),
				keyId: this.view.keyId
			},
    	    waitMsg : '正在提交数据',  
    	    waitTitle : '提示',  
    	    method : "POST",
    	    success : function(form, action) {
    	    	if (records.length > 0) {
	                var result = ExtApp.util.Util.decodeJSON(action.response.responseText);
		    		for (var i = 0; i < records.length; i++) {
	    	    		data.push(records[i].data);
	    	    	}
	    	    	Ext.Ajax.request({
	    	    		url:'/pdms/ims/qe-notify!saveNotifyList.action',
	    	    		params: {
	    	    			editModel: Ext.encode(data),
	    	    			keyId: result.data
	    				},
	    				scope: gridNotify,
	    				failure: function(response, opts) {
	    			    	ExtApp.util.Util.handleRequestFailure(response);
	    			    }
	    	    	});
    	    	}
    	    	var main = ma.up('mydraft');
    	    	btn.up('mySubInfo').destroy();
    	    	var gridDraft = main.down('grid');
    	    	gridDraft.getStore().reload();
    	    	ExtApp.util.Util.showToast(Ext.String.format('已提交~'));
    	    },
    	    failure : function(form, action) {
    	        Ext.Msg.alert('提示', "操作失败：输入非法字符！！！");
    	    }
	    });
    },
    // 点击【删除】
    deleteSubmit: function(btn) {
    	var me = this.view;
    	var v_form = me.getForm();
    	var view = this.getView().up('qmsmain');
    	this.dialog = view.add({
			title:"确定删除此问题吗？",
        	xtype: 'mySubInfoDeleteButton'
        });
        this.dialog.show();
    	
    },
	// 点击【保存草稿】
    updDraft: function(btn) {
    	var ma = this.view;
    	var v_form = this.view.getForm();
    	this.setAllowBlank('1');

    	v_form.submit({
    		url: '/pdms/ims/my-sub-info!updMyDraft.action',
			params: {
				keyId: this.view.keyId
			},
    	    waitMsg : '正在提交数据',
    	    waitTitle : '提示',
    	    method : "POST",
    	    success : function(form, action) {
    	        Ext.Msg.alert('提示', "操作失败：输入非法字符！！！");
    	    },
    	    failure : function(form, action) {
    	    	Ext.Msg.alert("success");
    	    	var main = ma.up('mydraft');
    	    	btn.up('mySubInfo').destroy();
    	    	var gridDraft = main.down('grid');
    	    	gridDraft.getStore().reload();
    	    }
    	});
    },
	// 点击【所属项目】
    selcombo: function(combo, newValue, oldValue, eOpts) {

    	if (oldValue == null) {
    		return;
    	}
    	var store = Ext.create(
    			'ExtApp.store.qualityissuemanagement.ProgramVehicleStore');
    	store.getProxy().extraParams = {programId: newValue};
    	store.load();
    	var subCombo = this.getView().getForm().findField('SubProject');
    	subCombo.reset();
    	
    	store.on('load', function() {
    		subCombo.setStore(this);
    	});
    },
    setAllowBlank: function(flg_c) {
    	var v_form = this.view.getForm();

    	var ProTitleField = v_form.findField('ProTitle');
    	var BeProjectField = v_form.findField('BeProject');
    	var SubProjectField = v_form.findField('SubProject');
    	var BuildPhaseField = v_form.findField('BuildPhase');
    	var OccurrenceTimeField = v_form.findField('OccurrenceTime');
    	var OccurrenceSiteField = v_form.findField('OccurrenceSite');
    	var ExperimentTypeField = v_form.findField('ExperimentType');
    	var FaultNumberField = v_form.findField('FaultNumber');
    	var PartMileageField = v_form.findField('PartMileage');
    	var ProgressExperField = v_form.findField('ProgressExper');
    	var QeDescriptionField = v_form.findField('QeDescription');
    	var DisposalMeasuresField = v_form.findField('DisposalMeasures');
    	var PreliminaryCauseField = v_form.findField('PreliminaryCause');

    	if (flg_c == '1') {
        	ProTitleField.allowBlank = true;
        	BeProjectField.allowBlank = true;
        	SubProjectField.allowBlank = true;
        	BuildPhaseField.allowBlank = true;
        	OccurrenceTimeField.allowBlank = true;
        	OccurrenceSiteField.allowBlank = true;
        	ExperimentTypeField.allowBlank = true;
        	FaultNumberField.allowBlank = true;
        	PartMileageField.allowBlank = true;
        	ProgressExperField.allowBlank = true;
        	QeDescriptionField.allowBlank = true;
        	DisposalMeasuresField.allowBlank = true;
        	PreliminaryCauseField.allowBlank = true;
    	} else if (flg_c == '0') {
        	ProTitleField.allowBlank = false;
        	BeProjectField.allowBlank = false;
        	SubProjectField.allowBlank = false;
        	BuildPhaseField.allowBlank = false;
        	OccurrenceTimeField.allowBlank = false;
        	OccurrenceSiteField.allowBlank = false;
        	ExperimentTypeField.allowBlank = false;
        	FaultNumberField.allowBlank = false;
        	PartMileageField.allowBlank = false;
        	ProgressExperField.allowBlank = false;
        	QeDescriptionField.allowBlank = false;
        	DisposalMeasuresField.allowBlank = false;
        	PreliminaryCauseField.allowBlank = false;
    	}
    }
});