/**
 * 项目管理-项目计划-前置/后置节点
 */
Ext.define('ExtApp.view.projectmanagement.maindept.DeptPlanPreTaskController', {
    extend: 'ExtApp.view.common.BaseViewController',
    alias: 'controller.deptPlanPreTask',

    // 初始化
    init: function() {
    	// 权限控制
    	if (! this.view.editPrivilege) {
        	var grid = this.view.down('grid');
			// 隐藏操作栏
        	grid.down('toolbar').setHidden(true);
        	grid.down('actioncolumn').setHidden(true);
    	}
    },
    
    // 添加前置/后置节点
    addPreTask: function(btnObj) {
    	var me = this;
        Ext.create({
            xtype: 'deptPlanRefTask',
            programVehicleId: me.view.programVehicleId,
            relationFlag: true,
            multiSelect: false,
            parentCaller: me
        }).show();
    },
    
    // 选择添加节点-确定
    confirmRefTask: function(selModel) {
    	var me = this;
    	if (selModel.length == 0) {
    		return;
    	}
    	
		// 当前任务时间
		var taskDate = this.view.up('deptPlanTaskDetail').down(
				'form').getForm().findField('plannedFinishDate').value;
		var date = selModel[0].get('plannedFinishDate');
		// 后置节点
		if (this.view.preType == 'POST') {
			if (taskDate > date) {
	    		ExtApp.util.Util.showErrorMsg('所选后置节点的开始时间必须晚于本任务的截止时间!' 
	    				+ '<br>任务节点截止时间：' + ExtApp.util.Util.formatDate(taskDate)
	    				+ '<br>后置节点开始时间：' + ExtApp.util.Util.formatDate(date));
	    		return;
	    	}
			if (me.view.taskId == selModel[0].get('id')) {
				ExtApp.util.Util.showErrorMsg('不允许选择节点本身作为后置节点！');
	    		return;
			}
		// 前置节点
		} else {
			if (taskDate < date) {
	    		ExtApp.util.Util.showErrorMsg('所选前置节点的截止时间必须早于本任务的开始时间!' 
	    				+ '<br>任务节点开始时间：' + ExtApp.util.Util.formatDate(taskDate)
	    				+ '<br>前置节点截止时间：' + ExtApp.util.Util.formatDate(date));
	    		return;
	    	}
			if (me.view.taskId == selModel[0].get('id')) {
				ExtApp.util.Util.showErrorMsg('不允许选择节点本身作为前置节点！');
	    		return;
			}
		}
    	
    	var taskId = me.view.taskId;
    	var preTaskId = selModel[0].get('id');
    	if (this.view.preType == 'POST') {
    		taskId = selModel[0].get('id');
    		preTaskId = me.view.taskId;
    	}
    	me.view.mask('Please Waiting...');
		Ext.Ajax.request({
    		url:'/pdms/pm/dept-plan!insertPreTask.action',
    		params: {
    			taskId: taskId,
    			preTaskId: preTaskId
			},
			scope: me,
			success: function(response, opts) {
				me.view.unmask();
		    	var obj = Ext.decode(response.responseText);
		        if (obj.success) {
		        	me.view.down('grid').store.reload();
			    	ExtApp.util.Util.showToast("提交成功！");
		        } else {
		        	ExtApp.util.Util.handleRequestFailure(response);
		        }
		    },
			failure: function(response, opts) {
				me.view.unmask();
		    	ExtApp.util.Util.handleRequestFailure(response);
		    }
    	})
    },
    
    // 删除节点  
    deletePreTask: function(grid, rowIndex) {
    	var me = this;
    	var record = grid.getStore().getAt(rowIndex);
    	Ext.MessageBox.confirm('提示', '您确定要删除该条记录吗?', function(btn) {
    		// 提示信息点击【YES】则删除
    		if (btn == 'yes') {
    			me.view.mask('Please Waiting...');
    	    	Ext.Ajax.request({
    	    		url:'/pdms/pm/dept-plan!deletePreTask.action',
    	    		params: {
    	    			preTaskId: record.data.id
    				},
    				scope: me,
    				success: function(response, opts) {
    					me.view.unmask();
    			    	var obj = Ext.decode(response.responseText);
    			        if (obj.success) {
    			        	grid.getStore().reload();
        			    	ExtApp.util.Util.showToast("删除成功！");
    			        } else {
    			        	ExtApp.util.Util.handleRequestFailure(response);
    			        }
    			    },
    				failure: function(response, opts) {
    					me.view.unmask();
    			    	ExtApp.util.Util.handleRequestFailure(response);
    			    }
    	    	})
    		}
    	});
    }
});