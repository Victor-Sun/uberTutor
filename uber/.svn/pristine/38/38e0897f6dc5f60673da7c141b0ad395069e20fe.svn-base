/**
 * 个人管理-待办任务-基本信息Controller
 */
Ext.define('ExtApp.view.myworkspace.todopm.TodoListPMController',{
    extend: 'ExtApp.view.common.BaseViewController',
    alias: 'controller.todoListPM',

    // 双击列表
    onCelldblclick: function(grid , td , cellIndex , record , tr , rowIndex , e , eOpts) {
    	var rec = grid.getStore().getAt(rowIndex);
    	var refPanel = grid.up('tabpanel');
    	for (var i = 0; i < refPanel.items.getCount(); i++) {
    		if (refPanel.items.get(i).title == rec.get('taskName')) {
    			refPanel.setActiveTab(refPanel.items.get(i));
    			return;
    		}
    	}
    	
    	// 交付物审批流程
    	if (rec.get('processCode') == 'DA001' ||
    			rec.get('processCode') == 'RA001') {
    		var me = this;
    		Ext.Ajax.request({
    			url: '/pdms/mw/todo-list!getTodoTaskInfo.action',
    			params: {
    				processTaskId: rec.get('id')
    			},
        	    scope: me,
        	    success: function(response, opts) {
        	    	var obj = Ext.decode(response.responseText);
    		        if (obj.success) {
		        		var newView = Ext.create({
		            		xtype: 'pmTask',
		            		title: rec.get('taskName'),
		            		processTaskId: rec.get('id'),
		            		taskId: rec.get('taskId'),
		            		programId: rec.get('programId'),
		            		processCode: obj.data.processCode,
		            		processId: obj.data.processId,
		            		processStepId: obj.data.processStepId,
		            		completeFlag: obj.data.completeFlag,
		            		taskProgressStatusCode: obj.data.taskProgressStatusCode,
		            		taskStatusCode: obj.data.taskStatusCode,
		            		processTaskProgressStatus: obj.data.processTaskProgressStatus
		        		});
		        		refPanel.add(newView);
		            	refPanel.setActiveTab(newView);
    		        } else {
    		        	ExtApp.util.Util.handleRequestFailure(response);
    		        }
        	    },
        	    failure: function(response, opts) {
        	    	ExtApp.util.Util.handleRequestFailure(response);
        	    }
            });
    	}
    },

    // 查询
    search: function(btn, e) {
    	var me = this;
    	me.view.mask('Please Waiting...');
    	var form = me.view.down('toolbar').down('form').getForm();
    	var store = Ext.create(
			'ExtApp.store.myworkspace.TodoListPMStore');
    	store.getProxy().extraParams = {
			searchModel: Ext.encode(form.getFieldValues())
		};
    	store.load();
    	store.on('load', function() {
    		me.view.down('grid').setStore(this);
    		me.view.down('pagingtoolbar').setStore(this);
    		me.view.unmask();
    	});
    },
    
    // 重置
    reloadSearch: function() {
    	var me = this;

    	var form = this.view.down('toolbar').down('form').getForm();
    	Ext.each(form.getFields().items, function(field) {
    		if (field.xtype != 'displayfield') {
    			if (field.xtype == 'checkbox') {
        			field.setValue(true);
        		} else {
        			field.setValue('');
        		}
    		}
		});
    	form.findField('searchDaysVal').setValue(7);
    	this.search();
    },
    
//    // 更改进度状态
//    onChangeAllStatus: function(combo, newValue, oldValue, eOpts ) {
//    	var grid = this.lookupReference('refTodoListPMGrid');
//    	var modelArray = grid.getSelection();
//    	modelArray.forEach(function(model) {
//    		model.set('taskProgressStatusCode', newValue);
//    	});
//    },
    
    // 刷新Grid
    refreshView: function() {
    	this.view.down('grid').getStore().reload();
    },
    transferTask:function(button){
    	var me = this;
    	var selections = me.view.down('grid').getSelection();
    	var modelData = [];
    	for(var i=0;i<selections.length;i++){
    		modelData.push(selections[i].data.processTaskId);
    	}
    	
    	var transferTaskWindow = Ext.create('ExtApp.view.common.TransferTaskWindow',{
			callback:function(comment,userTo){
        		if(userTo == null || userTo == ''){
        			Ext.Msg.alert('提示', '必须填写接收人！');
        			return;
        		}
        		transferTaskWindow.close();
        		Ext.getBody().mask();
        		Ext.Ajax.request({
       	   	 	 url: '/pdms/mw/todo-list!transferTask.action',
       	   	 	 params: {
           			 model: Ext.encode(modelData),
           			 remark:comment,
           			 userTo:userTo
       			 },
       	   	 	 scope: me,
       	   	 	 success: function(response, opts) {
       	   	     	Ext.getBody().unmask();
       	   	    	var obj = Ext.decode(response.responseText);
       	   	        if (obj.success) {
       	   	        	ExtApp.util.Util.showToast("提交成功！");
       	   	        	me.view.getStore().load();
       	   	        } else {
       	   	        	ExtApp.util.Util.handleRequestFailure(response);
       	   	        }
       	   	    },
       		    failure: function(response, opts) {
       		        Ext.getBody().unmask();
       		        ExtApp.util.Util.handleRequestFailure(response);
       		    }
              });
			}
		});
    	transferTaskWindow.show();
		return;
    }
});
