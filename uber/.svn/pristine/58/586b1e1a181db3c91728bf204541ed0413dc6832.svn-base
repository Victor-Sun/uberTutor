/**
 * 质量问题管理-仪表盘-分类图-Controller
 */
Ext.define('ExtApp.view.qualityissuemanagement.qedashboard.QMSDashboardCartesianController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.chartcartesian',
    //初期加载
    init: function() {
    	// 项目管理报告中显示时，不重新加载Store
    	if (this.view.isPmReport) {
    		return;
    	}
	    var chCartesian = this.view;
		var store1 = Ext.create(
				'ExtApp.store.qualityissuemanagement.QMSBrowsersStore');
		store1.load();
	
		store1.on('load', function() {
			chCartesian.setStore(this);
		});
	},

	onPreview: function() {
        var chart = this.view;

        chart.preview();
    },

    onThemeSwitch: function () {
        var chart = this.view,
            currentThemeClass = Ext.getClassName(chart.getTheme()),
            themes = Ext.chart.theme,
            themeNames = [],
            currentIndex = 0,
            name;

        for (name in themes) {
            if (Ext.getClassName(themes[name]) === currentThemeClass) {
                currentIndex = themeNames.length;
            }
            if (name !== 'Base' && name.indexOf('Gradients') < 0) {
                themeNames.push(name);
            }
        }
        chart.setTheme(themes[themeNames[++currentIndex % themeNames.length]]);
    },

    onStackGroupToggle: function (segmentedButton, button, pressed) {
        var chart = this.view,
            series = chart.getSeries()[0],
            value = segmentedButton.getValue();

        series.setStacked(value === 0);
        chart.redraw();
    },

    // The 'target' here is an object that contains information
    // about the target value when the drag operation on the column ends.
//    onEditTipRender: function (tooltip, item, target, e) {
//        var fieldIndex = Ext.Array.indexOf(item.series.getYField(), target.yField),
//            browser = item.series.getTitle()[fieldIndex];
//
//        tooltip.setHtml(
//            browser + ' on ' + item.record.get('dept') + ': ' +
//            target.yValue.toFixed(1) + '%');
//    },

    onBarTipRender: function (tooltip, record, item) {
        var fieldIndex = Ext.Array.indexOf(item.series.getYField(), item.field),
            browser = item.series.getTitle()[fieldIndex];

        tooltip.setHtml(browser + ' on ' +
            record.get('dept') + ': ' +
            record.get(item.field) + '件');
    },

    onAxisLabelRender: function (axis, label, layoutContext) {
        return label.toFixed(label < 10 ? 1: 0);
    }

});