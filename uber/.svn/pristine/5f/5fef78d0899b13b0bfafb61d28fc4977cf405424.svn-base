Ext.define('ExtApp.view.workorder.common.WorkOrderDocuments', {
	extend: 'Ext.panel.Panel',
    xtype: 'workOrderDocuments', 
	title:'文档',
	itemId:'workOrderDocumentsItemId',
	initComponent: function() {
		var me = this;
		var store = Ext.create('ExtApp.store.workorder.WorkOrderDocumentStore');
		store.load({params:{id:me.workOrderId}});
		me.items = [{
			xtype:'grid',
			height:'400px',
			tbar:[
					{ type:'button', text:'上传',
						listeners: {
							click:function(button){
								if(me.workOrderId){
									Ext.create('ExtApp.view.workorder.common.WorkOrderDocumentWindow',{grid:button.up('grid'),workOrderId:me.workOrderId}).show();
								}else{
									me.outboundWorkOrderSave();
								}
								
							}
						}
					}
			],
			store:store,
			columns:[
				{ xtype: 'rownumberer'},
				{ text:'名称', flex: 1, dataIndex:'documentName'},
				{ text:'上传人', flex: 1, dataIndex:'createName'},
				{ text:'上传时间', flex: 1, dataIndex:'createDate'},
				{ xtype:'actioncolumn',
		            width:50,
		            items: [{
		            	iconCls:'x-fa fa-trash',
//		                tooltip: 'Delete',
		                handler: function(grid, rowIndex, colIndex) {
		                	var me = this;
		                	 var rec = grid.getStore().getAt(rowIndex);
		                	 var id = rec.get('id');
		                	 Ext.Ajax.request({
		                		 url: '/pdms/workorder/workorder!deleteDocument.action',
		                		 params:{documentIndexId:id},
		                	     success: function(response, opts) {
		                	    	 var result = ExtApp.util.Util.decodeJSON(response.responseText);
		                	 		 if (!result){ //#4
		            	    	 		 result = {};
		            	    	 		 result.success = false;
		            	    	 		 result.msg = response.responseText;
		                	 		 }
		                	 		 grid.getStore().load({params:{id:me.up('workOrderDocuments').workOrderId}});
		                	     },

		                	     failure: function(response, opts) {
		                	    	 var result = ExtApp.util.Util.decodeJSON(response.responseText);
		                	 		 
		                	     }
		                	 });
		                },
		                getClass: function(v, meta, rec) {
		                	var appStatus = rec.get('appStatus');
		                    if (appStatus == 'RESUBMIT' || appStatus == 'DRAFT' || appStatus == ''  || appStatus == null) {
		                          return 'x-fa fa-trash';
		                    }else{
		                    	return 'x-hidden';
		                    }
		            	}
		            }]
		        }
			],
			dockedItems: [
	            {
	                xtype: 'pagingtoolbar',
	                dock: 'bottom',
	                displayInfo: true,
	                store: store
	            }
	        ]
		}];
		me.callParent(arguments);
	},
	setReadOnly:function(){
		var me = this;
		me.down('actioncolumn').hide();
		me.down('button').hide();
	},
	setAllowBlank:function(form,flag){
		var me = this;
		me.setFieldAllowBlank(form.getForm().findField('title'),flag);
		me.setFieldAllowBlank(form.getForm().findField('sourceDept'),flag);
		me.setFieldAllowBlank(form.getForm().findField('targetDept'),flag);
		me.setFieldAllowBlank(form.getForm().findField('programName'),flag);
		me.setFieldAllowBlank(form.getForm().findField('workType'),flag);
		me.setFieldAllowBlank(form.getForm().findField('dueDate'),flag);
		me.setFieldAllowBlank(form.getForm().findField('contactName'),flag);
		me.setFieldAllowBlank(form.getForm().findField('contactPhone'),flag);
		me.setFieldAllowBlank(form.getForm().findField('workDescription'),flag);
		me.setFieldAllowBlank(form.getForm().findField('pm'),flag);
		me.setFieldAllowBlank(form.getForm().findField('eng'),flag);
		me.setFieldAllowBlank(form.getForm().findField('isProjectType'),flag);
		me.setFieldAllowBlank(form.getForm().findField('responseDescription'),flag);
		me.setFieldAllowBlank(form.getForm().findField('responseContactPhone'),flag);
		me.setFieldAllowBlank(form.getForm().findField('lineMgr'),flag);
		me.setFieldAllowBlank(form.getForm().findField('deptMgr'),flag);
		me.setFieldAllowBlank(form.getForm().findField('deptDirector'),flag);
		me.setFieldAllowBlank(form.getForm().findField('woAgent'),flag);
		me.setFieldAllowBlank(form.getForm().findField('pgDirector'),flag);
		if(!flag){
			if(form.getForm().findField('isProjectType')){
				if(form.getForm().findField('isProjectType').getValue().isProjectType == 'Y'){
					form.getForm().findField('pgDirector').allowBlank = false;
					form.getForm().findField('lineMgr').allowBlank = true;
					form.getForm().findField('deptMgr').allowBlank = true;
					form.getForm().findField('deptDirector').allowBlank = true;
//					form.getForm().findField('pm').allowBlank = true;
//					form.getForm().findField('eng').allowBlank = true;
				}else{
					form.getForm().findField('pgDirector').allowBlank = true;
					form.getForm().findField('lineMgr').allowBlank = false;
					form.getForm().findField('deptMgr').allowBlank = false;
					form.getForm().findField('deptDirector').allowBlank = false;
//					form.getForm().findField('pm').allowBlank = true;
//					form.getForm().findField('eng').allowBlank = true;
				}
			}
		}
		
		
	},
	setFieldAllowBlank:function(field,flag){
		if(field){
			field.allowBlank = flag;
		}
	},
	outboundWorkOrderSave:function(){
		var me = this;
        var workOrderOutbandForm = Ext.ComponentQuery.query('#workOrderOutbandFormItemId')[0];
        me.setAllowBlank(workOrderOutbandForm,true);
        if (workOrderOutbandForm.isValid()){
        	workOrderOutbandForm.submit({
            	params:{action:'SAVE',method:'updateOutboundWorkOrder'},
                clientValidation: true,
                url: '/pdms/workorder/workorder!save.action',
                scope: me,
                success: function(form, action){
                	me.workOrderId = action.result.data.workOrderId;
                	workOrderOutbandForm.getForm().findField('id').setValue(me.workOrderId);
                	Ext.create('ExtApp.view.workorder.common.WorkOrderDocumentWindow',{grid:me.down('grid'),workOrderId:me.workOrderId}).show();
                }
            });
    	}
	}
});