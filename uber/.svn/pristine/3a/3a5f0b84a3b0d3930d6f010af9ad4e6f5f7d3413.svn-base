/**
 * 项目管理-专项基本信息
 */
Ext.define('ExtApp.view.projectManagement.extplan.ProjectExtensionPlanInfo',{
	extend:'Ext.form.Panel',
	xtype:'projectExtensionPlanInfo',
	
	controller: 'projectExtensionPlanInfo',
	
	scrollable:'y',
	title: '基本信息',
	
	layout:{
		type:'vbox',
		align:'stretch'
	},

	margin:20,
	cls:'shadow',
	
	initComponent: function() {
		var me = this;
		// 专项类型
		var projectTypeStore = Ext.create(
			'ExtApp.store.common.CodeTableStore');
		projectTypeStore.getProxy().extraParams = {type: 'EXT_PROJECT_TYPE'};
		projectTypeStore.load();
		
		// 进展状态
		var progressStore = Ext.create(
			'ExtApp.store.common.CodeTableStore');
		progressStore.getProxy().extraParams = {type: 'TASK_PROGRESS_STATUS'};
		progressStore.load();
		
		// 专项属性
		var columnStore = Ext.create(
			'ExtApp.store.projectmanagement.ProjectExtensionPlanColumnDefStore');
		columnStore.getProxy().extraParams = {extProjectId: this.extProjectId};
		columnStore.load();
		
		this.cellEditing = new Ext.grid.plugin.CellEditing({
            clicksToEdit: 1
        });
		
		var ctStore = Ext.create('Ext.data.Store', {
		    fields: ['code', 'name'],
		    data : [
		        {"code":"CHR", "name":"文字"},
		        {"code":"NUM", "name":"数值"}
		    ]
		});

	    this.items = [{
	    	xtype: 'fieldset',
	    	title: '基本属性',
	    	margin: 10,
	    	layout: 'column',
	    	items: [{
	    		xtype: 'textfield',
				labelAlign: 'right',
				fieldLabel: '专项名称',
				name: 'name',
				columnWidth: 0.25
	    	},{
	    		xtype: 'combobox',
				labelAlign: 'right',
				fieldLabel: '专项类型',
				store: projectTypeStore,
			    queryMode: 'local',
			    displayField: 'name',
			    valueField: 'code',
			    name: 'extProjectTypeName',
				columnWidth: 0.25
	    	},{
	    		xtype: 'textfield',
				labelAlign: 'right',
				fieldLabel: '专项负责人',
				name: 'ownerName',
				columnWidth: 0.25
	    	},{
	    		xtype: 'textfield',
				labelAlign: 'right',
				fieldLabel: '专项关联节点',
				name: 'taskName',
				columnWidth: 0.25
	    	},{
				xtype: 'textarea',
				labelAlign: 'right',
				fieldLabel: '备注',
				name: 'memo',
				columnWidth: 1,
				margin: '5 0 0 0'
	    	}]
	    },{
	    	xtype: 'fieldset',
	    	title: '专项属性',
	    	margin: 10,
	    	items: [{
	    		xtype: 'grid',
		    	plugins: [this.cellEditing],
				store: columnStore,
				columns: [{
					text: '序号',
					width:60,
					dataIndex: 'columnIdx',
					editor: {
	                	xtype: 'numberfield',
	                    minValue: 1,
	                    maxValue: 100000
	                }
				},{
					text: '标题',
					flex: 1,
					dataIndex: 'columnTitle',
					editor: {
					}
				},{
					text: '类型',
					flex: 1,
					dataIndex: 'columnTypeCode',
					xtype: 'widgetcolumn',
					widget: {
		                xtype: 'combo',
		                store: ctStore,
		                queryMode: 'local',
					    displayField: 'name',
					    valueField: 'code'
		            }
				},{
					text: '列宽',
					flex: 1,
					dataIndex: 'columnWidth',
					editor: {
	                	xtype: 'numberfield',
	                    minValue: 1,
	                    maxValue: 100000
	                }
				},{
					xtype: 'checkcolumn',
	                header: '显示',
	                dataIndex: 'isDisplayOnList',
	                width: 90,
	                stopSelection: false
				},{
	                xtype: 'actioncolumn',
	                width: 30,
	                sortable: false,
	                menuDisabled: true,
	                items: [{
	                    iconCls: 'cell-editing-delete-row',
	                    //tooltip: '删除',
	                    handler: 'deleteColumn'
	                }]
	            }],
	            selModel: {
	                type: 'cellmodel'
	            },
	            tbar: [{
	                text: 'Add',
	                iconCls: 'icon-add',
	                handler: 'addColumn'
	            }],
	            dockedItems: [{
	                xtype: 'pagingtoolbar',
	                dock: 'bottom',
	                displayInfo: true,
	                store: columnStore
	            }]
	    	}]
	    }];
		this.tbar = [{
			xtype:'displayfield',
			name: 'projectProgressStatus',
			renderer: function(value, filed) {
		    	return me.controller.renderTaskProgress(value);
		    }
		},{
	    	xtype: 'combobox',
	    	editable: false,
			store: progressStore,
		    queryMode: 'local',
		    displayField: 'name',
		    valueField: 'code',
		    name: 'projectProgressStatusName',
		    listeners: {
		    	change: 'onChangeProgress'
		    }
		},'->',{
			text:'保存'
		},{
			text:'发布'
		},{
			text:'历史记录'
		}];
		this.callParent(arguments);
	}
});