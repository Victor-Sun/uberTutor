/**
 * 个人管理-待办任务-Open Issue Controller
 */
Ext.define('ExtApp.view.myworkspace.TodoListOpenIssueController',{
    extend: 'ExtApp.view.common.BaseViewController',
    alias: 'controller.todoListOpenIssue',
    itemdblclick: function(th , record , item , index , e , eOpts ) {
    	var taskId = record.get('taskId');
    	var issueId = record.get('issueId');
    	var stepId = record.get('stepId');
    	if(stepId == 2){
    		var taskWin = Ext.create('ExtApp.view.projectManagement.issue.solveissue.SolveIssueWindow',{issueId:issueId,grid:th,record:record});
        	taskWin.down('form').load({params:{issueId:issueId}});
        	taskWin.show();
    	}else{
    		var taskWin = Ext.create('ExtApp.view.projectManagement.issue.confirmissue.ConfirmIssueWindow',{issueId:issueId,grid:th,record:record});
        	taskWin.down('form').load({params:{issueId:issueId}});
        	taskWin.show();
    	}
    	
    },
    transferTask:function(button){
    	var me = this;
    	var selections = me.view.down('grid').getSelection();
    	var modelData = [];
    	for(var i=0;i<selections.length;i++){
    		modelData.push(selections[i].data.taskId);
    	}
    	
    	var transferTaskWindow = Ext.create('ExtApp.view.common.TransferTaskWindow',{
			callback:function(comment,userTo){
        		if(userTo == null || userTo == ''){
        			Ext.Msg.alert('提示', '必须填写接收人！');
        			return;
        		}
        		transferTaskWindow.close();
        		Ext.getBody().mask();
        		Ext.Ajax.request({
       	   	 	 url: '/pdms/mw/todo-list!transferTask.action',
       	   	 	 params: {
           			 model: Ext.encode(modelData),
           			 remark:comment,
           			 userTo:userTo
       			 },
       	   	 	 scope: me,
       	   	 	 success: function(response, opts) {
       	   	     	Ext.getBody().unmask();
       	   	    	var obj = Ext.decode(response.responseText);
       	   	        if (obj.success) {
       	   	        	ExtApp.util.Util.showToast("提交成功！");
       	   	        	me.view.down('grid').getStore().load();
       	   	        } else {
       	   	        	ExtApp.util.Util.handleRequestFailure(response);
       	   	        }
       	   	    },
       		    failure: function(response, opts) {
       		        Ext.getBody().unmask();
       		        ExtApp.util.Util.handleRequestFailure(response);
       		    }
              });
			}
		});
    	transferTaskWindow.show();
		return;
    },
    
    // 查询
    search: function(btn, e) {
    	var me = this;
    	me.view.mask('Please Waiting...');
    	var form = me.view.down('toolbar').down('form').getForm();
    	var store = Ext.create(
			'ExtApp.store.myworkspace.TodoListOpenIssueStore');
    	store.getProxy().extraParams = {
			searchModel: Ext.encode(form.getFieldValues())
		};
    	store.load();
    	store.on('load', function() {
    		me.view.down('grid').setStore(this);
    		me.view.down('pagingtoolbar').setStore(this);
    		me.view.unmask();
    	});
    },
    
    // 重置
    reloadSearch: function() {
    	var me = this;

    	var form = this.view.down('toolbar').down('form').getForm();
    	Ext.each(form.getFields().items, function(field) {
    		if (field.xtype != 'displayfield') {
    			if (field.xtype == 'checkbox') {
        			field.setValue(true);
        		} else {
        			field.setValue('');
        		}
    		}
		});
    	form.findField('searchDaysVal').setValue(7);
    	this.search();
    },
    
    // 选中列表数据
    onSelectionChange: function(grid, records, eOpts) {
        if (records[0]) {
        	this.view.query('#detailForm')[0].getForm().loadRecord(records[0]);
        }
    }

});
