/**
 * 项目管理-质量阀-交付物
 */
Ext.define('ExtApp.view.projectManagement.valve.ProjectPlanQualityValve01',{
	extend:'Ext.panel.Panel',
	xtype:'projectPlanQualityValve01',
	
	layout: 'fit',
	
	controller: 'projectPlanQualityValve01',	
	
	initComponent: function() {
		var qualityStore = Ext.create(
			'ExtApp.store.projectmanagement.ProjectPlanQualityValve01Store');
		qualityStore.getProxy().extraParams = {
			taskId: this.taskId,
			baselineId: this.baselineId
		};
		qualityStore.load();
		
		var statusHidden = (this.baselineId && this.baselineId != null);
	
		this.items = [{
			xtype: 'fieldset',
			layout: 'fit',
			collapsible: true,
			title: '交付物',
			margin:10,
			items:[{
				xtype:'grid',
				margin:0,
		        store:qualityStore,
                columns: [{
					xtype: 'rownumberer'
				},{
			        text: '进展状态',
				    renderer: 'renderTaskProgress',
				    width: 100,
				    align: 'center',
				    dataIndex: 'taskProgressStatusCode',
				    hidden: statusHidden
			    },{
			    	text: '交付物编号',
			    	flex: 1,
			    	dataIndex: 'code',
			    	editor: {
			    		allowBlank: false,
			    		maxLength: 50
	                }
			    },{
			    	text: '交付物名称',
			    	flex: 1,
			    	dataIndex: 'name',
			    	editor: {
	                    allowBlank: false,
	                    maxLength: 36
	                }
			    },{
			    	text: '负责主体', 
			    	flex: 1,
			    	dataIndex: 'obsName',
					renderer: 'renderLinkObs',
					listeners: {
						click: 'onClickObs'
					}
			    },{
			    	text: '关键交付物',
			    	itemId: 'ccIsKey',
			    	xtype: 'checkcolumn',
			    	width: 100,
			    	dataIndex: 'isKey',
		            listeners:{
		            	checkchange: 'onCheckchangeKey'
	  				}
			    },{
			    	text: '适用本项目', 
			    	itemId: 'ccIsFit',
			    	xtype: 'checkcolumn',
			    	width: 100,
			    	dataIndex: 'isFit',
		            listeners:{
		            	checkchange: 'onCheckchangeFit'
	  				}
			    },{
			    	text: '不适用原因', 
			    	width: 120,
			    	dataIndex: 'notFitReason',
					renderer: 'renderRemark'
//					listeners: {
//						click: 'onClickObs'
//					}
	            }],
		        dockedItems: [{
	                xtype: 'pagingtoolbar',
	                dock: 'bottom',
	                displayInfo: true,
	                store: qualityStore
	            }]
			}]
		}];
		this.callParent(arguments);
	}
});