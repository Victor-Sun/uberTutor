/**
 * 质量问题管理-问题提交-描述附件Controller
 */
Ext.define('ExtApp.view.qualityissuemanagement.qedashboard.step0.MyTaskInfo00Controller', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.myTaskInfo00',

    //初期加载
    init: function() {
    	
    	var me = this.view.getForm().findField('submitUserName');
    	me.setValue(Ext.ComponentQuery.query('#userNameItemId')[0].html);
//    	var v_tab = me.view.items.items[0];
//    	v_tab.setActiveTab(v_tab.items.items[0]);
    },
	// 点击【提交】
    saveSubmit: function(btn) {
    	var me = this;
    	var v_form = me.view.getForm();
    	me.setAllowBlank(false);
    	v_form.submit({
    		url: '/pdms/ims/ims-issue!save.action',
            params: {
            	method:'updateIssue',
            	action:'NEXT'
            },
    	    waitMsg : '正在提交数据',
    	    waitTitle : '提示',
    	    method : "POST",
    	    success : function(form, action) {
                var result = ExtApp.util.Util.decodeJSON(action.response.responseText);
    	    	ExtApp.util.Util.showToast(Ext.String.format('已提交!'));
    	    	var gridTask = me.getView().grid.getStore().load();
    	    	me.getView().close();
    	    },
    	    failure : function(form, action) {
    	    	ExtApp.util.Util.handleFormFailure(action);
    	    }
	    });
    },
	// 点击【保存草稿】
    saveDraft: function(btn) {
    	var me = this;
    	var v_form = me.view.getForm();
    	me.setAllowBlank(true);
    	
    	v_form.submit({
//    		url: '/pdms/ims/submission!saveMyDraft.action',
    		url: '/pdms/ims/ims-issue!save.action',
            params: {
            	model: Ext.encode(v_form.getFieldValues()),
            	keyId: me.view.keyId,
            	taskId: me.view.taskId,
            	ProcessInstanceId: me.view.ProcessInstanceId,
            	method:'updateIssue',
            	action:'SAVE'
            },
            scope: this,
    	    success : function(form, action) {
    	    	v_form.findField('id').setValue(action.result.data);
    	    	ExtApp.util.Util.showToast(Ext.String.format('已保存!'));
    	    	var gridTask = me.getView().grid.getStore().load();
    	    	me.getView().close();
    	    },
    	    failure: function(form, action) {
    	    	ExtApp.util.Util.handleFormFailure(action);
    	    }
    	});
    },
    // 点击【删除】
    deleteSubmit: function(btn) {
    	var me = this.view;
    	var v_form = me.view.getForm();
    	var view = this.getView().up('qmsmain');
    	this.dialog = view.add({
			title:"确定删除此问题吗？",
        	xtype: 'submissionDeleteButton'
        });
        this.dialog.show();
    	
    },
	// 点击【所属项目】
    selcombo: function(combo, newValue, oldValue, eOpts) {
    	var store = Ext.create('ExtApp.store.qualityissuemanagement.ProgramVehicleStore');
    	store.getProxy().extraParams = {programId: newValue};
    	store.load();
    	var subCombo = this.getView().getForm().findField('subProjectId');
    	var subComboValue = this.getView().getForm().findField('subProjectId').getValue();
    	subCombo.reset();
    	
    	store.on('load', function() {
    		subCombo.setStore(this);
    		subCombo.setValue(subComboValue);
    	});
    },
    setAllowBlank: function(flag) {
    	var me = this;
    	var v_form = me.view.getForm();
    	v_form.findField('title').allowBlank = flag;
    	v_form.findField('projectId').allowBlank = flag;
    	v_form.findField('subProjectId').allowBlank = flag;
    	v_form.findField('stageId').allowBlank = flag;
    	v_form.findField('occurrenceDateStr').allowBlank = flag;
    	v_form.findField('occurrenceSite').allowBlank = flag;
    	v_form.findField('testTypeId').allowBlank = flag;
    	v_form.findField('sampleNumber').allowBlank = flag;
    	v_form.findField('troublePartMileage').allowBlank = flag;
    	v_form.findField('testProgress').allowBlank = flag;
    	v_form.findField('description').allowBlank = flag;
    	v_form.findField('disposalMeasures').allowBlank = flag;
    	v_form.findField('firstCauseAnalysis').allowBlank = flag;
    }
});