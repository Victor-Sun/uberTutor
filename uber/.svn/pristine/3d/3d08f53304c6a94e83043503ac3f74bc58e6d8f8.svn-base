/**
 * 工作联系单 Controller
 */
Ext.define('ExtApp.view.workorder.outbound.WorkOrderOutboundController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.workOrderOutbound',
    createWorkOrder:function(){
    	var me = this;
    	var grid = me.getView().down('grid');
    	Ext.create("ExtApp.view.workorder.WorkOrderWindow",{grid:grid}).show();
    },
    
	StepWindow1: function() {
		var me = this;
    	var grid = me.getView().down('grid');
		Ext.create({
			xtype: 'workorderoutboundstep1',
			grid:grid,
			title:'新建发出工联单'
		}).show();
	},
	
	StepWindow2: function() {
		Ext.create({
			xtype: 'workorderoutboundstep2'
		}).show();
	},
	
	StepWindow3: function() {
		Ext.create({
			xtype: 'workorderoutboundstep3'
		}).show();
	},
	setAllowBlank:function(form,flag){
		var me = this;
		me.setFieldAllowBlank(form.getForm().findField('title'),flag);
		me.setFieldAllowBlank(form.getForm().findField('sourceDept'),flag);
		me.setFieldAllowBlank(form.getForm().findField('targetDept'),flag);
		me.setFieldAllowBlank(form.getForm().findField('programName'),flag);
		me.setFieldAllowBlank(form.getForm().findField('workType'),flag);
		me.setFieldAllowBlank(form.getForm().findField('dueDate'),flag);
		me.setFieldAllowBlank(form.getForm().findField('contactName'),flag);
		me.setFieldAllowBlank(form.getForm().findField('contactPhone'),flag);
		me.setFieldAllowBlank(form.getForm().findField('workDescription'),flag);
		me.setFieldAllowBlank(form.getForm().findField('pm'),flag);
		me.setFieldAllowBlank(form.getForm().findField('eng'),flag);
		me.setFieldAllowBlank(form.getForm().findField('isProjectType'),flag);
		me.setFieldAllowBlank(form.getForm().findField('responseDescription'),flag);
		me.setFieldAllowBlank(form.getForm().findField('responseContactPhone'),flag);
		me.setFieldAllowBlank(form.getForm().findField('lineMgr'),flag);
		me.setFieldAllowBlank(form.getForm().findField('deptMgr'),flag);
		me.setFieldAllowBlank(form.getForm().findField('deptDirector'),flag);
		me.setFieldAllowBlank(form.getForm().findField('woAgent'),flag);
		me.setFieldAllowBlank(form.getForm().findField('pgDirector'),flag);
		if(!flag){
			if(form.getForm().findField('isProjectType')){
				if(form.getForm().findField('isProjectType').getValue().isProjectType == 'Y'){
					form.getForm().findField('pgDirector').allowBlank = false;
					form.getForm().findField('lineMgr').allowBlank = true;
					form.getForm().findField('deptMgr').allowBlank = true;
					form.getForm().findField('deptDirector').allowBlank = true;
//					form.getForm().findField('pm').allowBlank = true;
//					form.getForm().findField('eng').allowBlank = true;
				}else{
					form.getForm().findField('pgDirector').allowBlank = true;
					form.getForm().findField('lineMgr').allowBlank = false;
					form.getForm().findField('deptMgr').allowBlank = false;
					form.getForm().findField('deptDirector').allowBlank = false;
//					form.getForm().findField('pm').allowBlank = true;
//					form.getForm().findField('eng').allowBlank = true;
				}
			}
		}
		
		
	},
	setFieldAllowBlank:function(field,flag){
		if(field){
			field.allowBlank = flag;
		}
	},
	outboundWorkOrderSave:function(){
		var me = this;
        var form = this.lookupReference('workOrderOutbandForm');
        me.setAllowBlank(form,true);
        if (form.isValid()){
    		me.getView().mask('正在提交... 请耐心等待...');
            form.submit({
            	params:{action:'SAVE',method:'updateOutboundWorkOrder'},
                clientValidation: true,
                url: '/pdms/workorder/workorder!save.action',
                scope: me,
                success: 'onSubmitSuccess',
                failure: 'onSubmitFailure'
            });
    	}
	},
	outboundWorkOrderNext:function(){
		var me = this;
        var form = this.lookupReference('workOrderOutbandForm');
        if(form.getForm().findField('onlineMode')){
        	if(form.getForm().findField('onlineMode').getValue().onlineMode == 'N'){
        		var workOrderDocuments = Ext.ComponentQuery.query('#workOrderDocumentsItemId')[0];
        		if(workOrderDocuments.down('grid').getStore().getCount() < 1){
        			Ext.Msg.alert('提示', '请上传附件！');
        			return;
        		}
        	}
        }
        me.setAllowBlank(form,false);
        if (form.isValid()){
    		me.getView().mask('正在提交... 请耐心等待...');
            form.submit({
            	params:{action:'NEXT',method:'updateOutboundWorkOrder'},
                clientValidation: true,
                url: '/pdms/workorder/workorder!save.action',
                scope: me,
                success: 'onSubmitSuccess',
                failure: 'onSubmitFailure'
            });
    	}
	},
	processOutboundStep:function(){
		var me = this;
        var form = this.lookupReference('workOrderOutbandForm');
        if (form.isValid()){
    		me.getView().mask('正在提交... 请耐心等待...');
            form.submit({
            	params:{action:'NEXT',method:'processOutboundStep'},
                clientValidation: true,
                url: '/pdms/workorder/workorder!save.action',
                scope: me,
                success: 'onSubmitSuccess',
                failure: 'onSubmitFailure'
            });
    	}
	},
    onSubmitFailure: function(form, action) {
        this.getView().unmask();
        ExtApp.util.Util.handleFormFailure(action);
    },

    onSubmitSuccess: function(form, action) {
        var view = this.getView();
        view.unmask();
        var form = this.lookupReference('workOrderOutbandForm');
        var win = form.up('window');
        win.close();
        Ext.Msg.alert('提示', '提交成功！');
        var grid = win.grid;
        if(grid){
        	grid.getStore().load();
        }
    },
    // 双击交付物列表
    onCelldblclick: function(grid , td , cellIndex , record , tr , rowIndex , e , eOpts) {
    	var me = this;
    	var rec = grid.getStore().getAt(rowIndex);
    	var programId = me.getView().programId;
    	var grid = me.getView().down('grid');
    	var win = Ext.create("ExtApp.view.workorder.outbound.WorkOrderOutboundReadOnly",{grid:grid,workOrderId:rec.get('id'),record:rec,title:rec.get('title')+"-"+rec.get('status')}).show();
    	win.down('form').getForm().load({
    		params:{id:rec.get('id')},
    		url:'/pdms/workorder/workorder!getWorkOrderForm.action',
    		success: function(form, action) {
    	        win.down('form').getForm().findField('isProjectType').setValue({isProjectType:action.result.data.isProjectType});
    	        win.down('form').getForm().findField('onlineMode').setValue({onlineMode:action.result.data.onlineMode});
    	    }
    	});
    	win.setReadOnly();
    }
});
