Ext.define('ExtApp.view.projectManagement.issue.raiseissue.RaiseOpenIssueForm',{
	xtype:'raiseIssueForm',
	extend:'Ext.form.Panel',
	reference: 'raiseIssueForm',
	itemId:'raiseIssueFormItemId',
	url: '/pdms/pm/project-open-issue!getIssueForm.action',
	region: 'center',
	viewModel: {
		data: {
			value: '',
			value2:''
		},
		formulas: {
			count: {
				bind: '{value}',
				get: function(value){
					var counter = 500 - value.length;
					return "还有 " + counter + " 字符";
				}
			},
			count2: {
				bind: '{value2}',
				get: function(value2){
					var counter = 500 - value2.length;
					return "还有 " + counter + " 字符";
				}
			}
		}
	},
	
	initComponent: function() {
		var me = this;
		
		
		var issueSourceStore = Ext.create('Ext.data.Store', {
		    fields: ['id', 'name'],
		    proxy: {
		    	type: 'ajax',
		    	url: '/pdms/pm/project-open-issue!getIssueSourceList.action',
		        reader: {
		            type: 'json',
		            rootProperty: 'data'
		        }
		    },
		    autoLoad: true
		});
		
		// Create the combo box, attached to the states data store
		var issueSource = Ext.create('Ext.form.ComboBox', {
		    fieldLabel: '问题来源',
		    store: issueSourceStore,
		    name:'issueSourceId',
		    queryMode: 'local',
		    displayField: 'name',
		    allowBlank:false,
		    valueField: 'id',
		    padding:'10 25 10 30',
		    labelAlign: 'top'
		});
		

		
		var responsibleUserStore = Ext.create('Ext.data.Store', {
		    fields: ['id', 'name'],
		    proxy: {
		    	type: 'ajax',
		    	url: '/pdms/pm/project-open-issue!getResponsibleUser.action',
		        reader: {
		            type: 'json',
		            rootProperty: 'data'
		        }
		    }
		});
		
		// Create the combo box, attached to the states data store
		var responsibleUser = Ext.create('Ext.form.ComboBox', {
		    fieldLabel: '责任人',
		    store: responsibleUserStore,
		    name:'respUserId',
		    queryMode: 'local',
		    displayField: 'name',
		    allowBlank:false,
		    valueField: 'id',
		    padding:'10 25 10 30',
		    labelAlign: 'top'
		});
		
		var responsibleObsStore = Ext.create('Ext.data.Store', {
		    fields: ['id', 'name'],
		    proxy: {
		    	type: 'ajax',
		    	url: '/pdms/pm/project-open-issue!getResponsibleObsList.action',
		        reader: {
		            type: 'json',
		            rootProperty: 'data'
		        }
		    }
		});
		
		// Create the combo box, attached to the states data store
		var responsibleObs = Ext.create('Ext.form.ComboBox', {
		    fieldLabel: '责任组',
		    store: responsibleObsStore,
		    name:'obsId',
		    queryMode: 'local',
		    displayField: 'name',
		    allowBlank:false,
		    valueField: 'id',
		    padding:'10 25 10 30',
		    labelAlign: 'top',
			listeners: {
				change: function(th,newValue, oldValue, eOpts){
					responsibleUserStore.load({params:{obsId:newValue}});
				}
		    }
		});
		

		
		var vehicleStore = Ext.create('Ext.data.Store', {
		    fields: ['id', 'name'],
		    proxy: {
		    	type: 'ajax',
		    	url: '/pdms/pm/project-open-issue!getVehicleList4RaiseIssue.action',
		        reader: {
		            type: 'json',
		            rootProperty: 'data'
		        }
		    }
		});
		
		// Create the combo box, attached to the states data store
		var vehicle = Ext.create('Ext.form.ComboBox', {
		    fieldLabel: '车型',
		    store: vehicleStore,
		    name:'programVehicleId',
		    queryMode: 'local',
		    displayField: 'name',
		    allowBlank:false,
		    valueField: 'id',
		    padding:'10 25 10 30',
		    labelAlign: 'top',
		    forceSelection: true,
			listeners: {
				change: function(th,newValue, oldValue, eOpts){
					responsibleObsStore.load({params:{programVehicleId:newValue}});
				}
		    }
		});
		
		var programStore = Ext.create('Ext.data.Store', {
		    fields: ['id', 'code'],
		    proxy: {
		    	type: 'ajax',
		    	url: '/pdms/pm/project-open-issue!getProgramList4RaiseIssue.action',
		        reader: {
		            type: 'json',
		            rootProperty: 'data'
		        }
		    }
		});
		programStore.load();
		var program = Ext.create('Ext.form.ComboBox', {
		    fieldLabel: '项目',
		    store: programStore,
		    name:'programId',
		    queryMode: 'local',
		    displayField: 'code',
		    allowBlank:false,
		    valueField: 'id',
		    padding:'10 25 10 30',
		    labelAlign: 'top',
		    forceSelection: true,
			listeners: {
				change: function(th,newValue, oldValue, eOpts){
					vehicleStore.load({params:{programId:newValue}});
				}
		    }
		});
		
		var autoStore = Ext.create('Ext.data.Store', {
			pageSize: 1,
			fields: ['id', 'title','issueDescription','issueCause','issueResolution','userName','updateDate','vehicleName'],
			proxy: {
		    	type: 'ajax',
		    	url: '/pdms/pm/project-open-issue!getIssueKB.action',
		        reader: {
		            type: 'json',
		            rootProperty: 'data'
		        }
		    }
		});
		
		me.items = [{
			// container for node container
			xtype:'container',
			items: [{
				xtype: 'component',
    			html:'<div class="issue-node-container">' +
					'<ul>' +
						'<li><div class="node node-green">提出问题</div></li>' +
						'<li><i class="x-fa fa-arrow-right"></i></li>' +
						'<li><div class="node node-red">解决问题</div></li>' +
						'<li><i class="x-fa fa-arrow-right"></i></li>' +
						'<li><div class="node node-red">问题确认</div></li>' +
					'</ul>' +
				'</div>'
			}]
		},{
			xtype: 'fieldset',
			title: '基本信息',
			margin: '10 20 10 20',
			items: [{
				xtype:'panel',
				layout:{
					type:'vbox',
					align:'stretch'
				},
				items:[{
					xtype:'panel',
					layout:{
						type:'hbox',
						align:'stretch'
					},
					items:[{
						xtype: 'combobox',
						flex: 1,
						fieldLabel: '标题',
						labelAlign: 'top',
//						itemId:'tipItemId',
						padding:'10 25 10 30',
//						xtype : 'displayfield',
//						value : '',
						store: autoStore,
						name: 'title',
						typeAhead: true,
//					    hideLabel: true,
					    hideTrigger: true,
					    minChars:2,
					    listConfig: {
//					    	loadingText: 'Searching...',
//					    	emptyText: 'No Match Found',
					    	
					    	// Custom rendering template for each item
			                getInnerTpl: function() {
			                    return '<div class="search-item">' +
			                    	'<span class="results-left" style="min-width: 150px;"><h3>{title}</h3>{issueResolution}</span>' +
			                        '<span class="results-right" style="min-width: 150px;">Date: {updateDate}<br />by {userName}</span>' +
			                    '</div>';
			                }
					    },
					    listeners:{
					         'select': function( combo , record , eOpts){
					        	 combo.setValue(record.get('title'));
					        	 me.getForm().findField('issueDescription').setValue(record.get('issueDescription'));
					        	 me.getForm().findField('issueCause').setValue(record.get('issueCause'));
					         }
					    },
					    pageSize: 0
					}]
				},{
					xtype:'panel',
					layout:{
						type:'hbox',
						align:'stretch'
					},
					items:[{
				        xtype:'hiddenfield', 
				        name: 'id'
					},program,vehicle,issueSource,responsibleObs]
				},{
					xtype:'panel',
					layout:{
						type:'hbox',
						align:'stretch'
					},
					items:[responsibleUser,{
						xtype: 'textfield',
						readOnly: true,
						fieldCls: 'text-readonly',
						fieldLabel: '完成状态',
						labelWidth: 130,
						name: 'status',
						padding:'10 25 10 30',
						labelAlign: 'top'
					},{
						xtype: 'datefield',
						fieldLabel: '计划完成日期',
						labelWidth: 130,
						name: 'dueDate',
						format: 'Y-m-d',
						padding:'10 25 10 30',
						labelAlign: 'top',
						minValue:new Date()
					}]
//				}
//				,{
//					xtype:'panel',
//					layout:{
//						type:'hbox',
//						align:'stretch'
//					},
//					items:[{
//						xtype: 'datefield',
//						fieldLabel: '实际完成日期',
//						name: 'finishDate',
//						format: 'Y/m/d',
//						padding:'10 25 10 30',
//						labelAlign: 'top'
//					},{
//						xtype: 'textfield',
//						fieldLabel: '偏离计划完成天数',
//						labelWidth: 130,
//						name: 'departedDays',
//						padding:'10 25 10 30',
//						labelAlign: 'top'
//					}]
//				}
//				,{
					
				}]				
			}]
		},{
			xtype: 'fieldset',
			title: '问题描述与原因分析',
			margin: '10 20 10 20',
			items: [{
				xtype:'panel',
				layout:{
					type:'vbox',
					align:'stretch'
				},
				items:[{
					xtype:'textarea',
					name:'issueDescription',
					padding:'10 25 0 30',
					labelAlign:'top', 
					minWidth:650,
					enforceMaxLength:true,
					maxLength:500,
					bind: '{value}',
					fieldLabel:'任务/问题描述（最多500个字符）'
				},{
					xtype:'box',
					padding:'0 25 10 30',
					bind: '{count}'
				}]
			},{
				xtype:'panel',
				layout:{
					type:'vbox',
					align:'stretch'
				},
				items:[{
					xtype:'textarea',
					name:'issueCause',
					padding:'10 25 0 30',
					labelAlign:'top', 
					minWidth:650,
					enforceMaxLength:true,
					maxLength:500,
					bind: '{value2}',
					fieldLabel:'原因（最多500个字符）'
				},{
					xtype:'box',
					padding:'0 25 10 30',
					bind: '{count2}'
				}]
			}]
		}];
		me.callParent(arguments);
	},
	setReadOnly:function(flag){
		var me = this;
	}
});